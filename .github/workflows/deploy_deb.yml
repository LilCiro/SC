name: DEB Paketini Depoya Yükle ve Depoyu Güncelle (Manuel) 🚀📦

on:
  workflow_dispatch: # Bu iş akışını manuel olarak tetiklemeye izin verir

jobs:
  deploy_deb:
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: write

    steps:
      - name: Derleme İş Akışı Artifact'larını İndir 📥
        uses: actions/github-script@v7
        with:
          script: |
            // Bu adım, manuel tetikleme durumunda hangi çalıştırmanın artifact'ını indireceğini belirlemek için
            // biraz daha karmaşık hale geliyor. Genellikle en son başarılı derlemeyi hedefleriz.
            // Eğer belirli bir derleme ID'si ile tetiklemek isterseniz, 'workflow_dispatch' input'larına ekleyebilirsiniz.
            // Şimdilik, en son başarılı 'Build and Package SCInsta' çalıştırmasının artifact'ını indirmeye çalışacağız.

            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const workflowName = 'Build and Package SCInsta'; // Kaynak iş akışının adı

            // İş akışı ID'sini bul
            const { data: workflows } = await github.rest.actions.listWorkflowRunsForRepo({
              owner,
              repo,
              workflow_id: workflowName,
              status: 'success',
              branch: context.ref.replace('refs/heads/', ''), // Mevcut branch'i kullan
              per_page: 1
            });

            if (workflows.workflow_runs.length === 0) {
              console.log(`Hata: '${workflowName}' iş akışının başarılı bir çalıştırması bulunamadı.`);
              return;
            }
            const latestRunId = workflows.workflow_runs[0].id;
            console.log(`En son başarılı '${workflowName}' çalıştırma ID'si: ${latestRunId}`);

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner,
              repo,
              run_id: latestRunId,
            });

            const matchArtifact = artifacts.data.artifacts.find(artifact => artifact.name.startsWith("SCInsta_deb_v")); 
            
            if (!matchArtifact) {
              console.log("DEB artifact bulunamadı veya adı eşleşmiyor. Dağıtım atlanıyor.");
              return;
            }
            
            const download = await github.rest.actions.downloadArtifact({
              owner,
              repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            
            const fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/deb_artifact.zip`, Buffer.from(download.data));
          
          env:
            DEB_REPO_SLUG: "LilCiro/scinsta-repo"
            DEB_REPO_BRANCH: "gh-pages"

      - name: İndirilen Artifact'ı Çıkar 📦
        run: |
          mkdir -p deb_output
          unzip deb_artifact.zip -d deb_output || { echo "Hata: Artifact çıkarılamadı."; exit 1; }
          DEB_FILE=$(find deb_output -name "*.deb" -print -quit)
          if [ -z "$DEB_FILE" ]; then
            echo "Hata: Çıkarılan artifact içinde .deb dosyası bulunamadı."
            exit 1
          fi
          echo "DEB_FILE_PATH=$DEB_FILE" >> $GITHUB_ENV
          echo "DEB_FILENAME=$(basename $DEB_FILE)" >> $GITHUB_ENV

      - name: Depo Klonla ve Hazırla 🌿
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DEB_REPO_SLUG }}
          ref: ${{ env.DEB_REPO_BRANCH }}
          token: ${{ secrets.DEB_REPO_TOKEN }}
          path: deb_repo

      - name: Yeni DEB Paketini Ekle ve Depoyu Güncelle ✨
        working-directory: deb_repo
        run: |
          mkdir -p debs
          cp "${{ github.workspace }}/${{ env.DEB_FILE_PATH }}" debs/ || { echo "Hata: .deb dosyası kopyalanamadı."; exit 1; }

          echo "Packages dosyası güncelleniyor..."
          dpkg-scanpackages -m debs /dev/null > Packages || { echo "Hata: Packages dosyası oluşturulamadı."; exit 1; }
          gzip -c Packages > Packages.gz || { echo "Hata: Packages.gz sıkıştırılamadı."; exit 1; }

          echo "Origin: SCInsta Tweak Deposu" > Release
          echo "Label: SCInsta" >> Release
          echo "Suite: stable" >> Release
          echo "Version: 1.0" >> Release
          echo "Codename: ios" >> Release
          echo "Architectures: iphoneos-arm" >> Release
          echo "Components: main" >> Release
          echo "Description: Instagram deneyiminizi geliştiren SCInsta tweakleri." >> Release
          
          echo "MD5Sum:" >> Release
          md5sum Packages | awk '{print " " $1 " Packages"}' >> Release
          md5sum Packages.gz | awk '{print " " $1 " Packages.gz"}' >> Release

          echo "SHA1:" >> Release
          sha1sum Packages | awk '{print " " $1 " Packages"}' >> Release
          sha1sum Packages.gz | awk '{print " " $1 " Packages.gz"}' >> Release

          echo "SHA256:" >> Release
          sha256sum Packages | awk '{print " " $1 " Packages"}' >> Release
          sha256sum Packages.gz | awk '{print " " $1 " Packages"}' >> Release

      - name: Değişiklikleri Commit Et ve Push Et 📤
        working-directory: deb_repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Otomatik: Yeni SCInsta DEB paketi eklendi ve depo güncellendi" || echo "Değişiklik yok, commit atlanıyor."
          git push
        env:
          GH_TOKEN: ${{ secrets.DEB_REPO_TOKEN }}

      - name: Tamamlandı 🎉
        run: echo "DEB paketi başarıyla depoya yüklendi ve depo güncellendi."
