name: DEB Paketini Depoya Yükle ve Depoyu Güncelle 🚀📦

on:
  workflow_run:
    # Bu, 'TurkceSCInsta' deposundaki 'Build and Package SCInsta' iş akışı tamamlandığında tetiklenir
    workflows: ["Build and Package SCInsta"]
    types:
      - completed # Sadece başarılı tamamlanmalarda çalışır

jobs:
  deploy_deb:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} # Sadece derleme başarılıysa devam et
    runs-on: ubuntu-latest
    permissions:
      contents: none
      actions: write # Bu iş akışının kendi çalıştırmalarını yönetmesi için gerekli

    steps:
      - name: Derleme İş Akışı Artifact'larını İndir 📥
        uses: actions/github-script@v7
        with:
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }},
            });
            // Buradaki artifact adı, buildapp.yml dosyasındaki DEB artifact adı ile aynı olmalı.
            // Önceki örneklerde 'SCInsta_deb_v${{ steps.scinsta_version.outputs.version }}' idi.
            // Bu değeri doğru şekilde eşleştirdiğinden emin ol!
            const matchArtifact = artifacts.data.artifacts.find(artifact => artifact.name.startsWith("SCInsta_deb_v")); 
            if (!matchArtifact) {
              console.log("DEB artifact bulunamadı veya adı eşleşmiyor, atlanıyor.");
              return;
            }
            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            const fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/deb_artifact.zip`, Buffer.from(download.data));
          
          env:
            # Buradaki bilgiler DEB paketlerini barındıracağın ayrı depona ait
            DEB_REPO_SLUG: "LilCiro/scinsta-repo" # Kendi depo adınla değiştirildi
            DEB_REPO_BRANCH: "gh-pages" # Genellikle GitHub Pages için kullanılır

      - name: İndirilen Artifact'ı Çıkar 📦
        run: |
          mkdir -p deb_output
          unzip deb_artifact.zip -d deb_output || { echo "Hata: Artifact çıkarılamadı."; exit 1; }
          DEB_FILE=$(find deb_output -name "*.deb" -print -quit)
          if [ -z "$DEB_FILE" ]; then
            echo "Hata: Çıkarılan artifact içinde .deb dosyası bulunamadı."
            exit 1
          fi
          echo "DEB_FILE_PATH=$DEB_FILE" >> $GITHUB_ENV
          echo "DEB_FILENAME=$(basename $DEB_FILE)" >> $GITHUB_ENV

      - name: Depo Klonla ve Hazırla 🌿
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DEB_REPO_SLUG }}
          ref: ${{ env.DEB_REPO_BRANCH }}
          token: ${{ secrets.DEB_REPO_TOKEN }} # SCInsta projenin deposuna eklediğin secret
          path: deb_repo # Depoyu bu dizine çeker

      - name: Yeni DEB Paketini Ekle ve Depoyu Güncelle ✨
        working-directory: deb_repo
        run: |
          mkdir -p debs # 'debs' klasörü yoksa oluştur
          cp "${{ github.workspace }}/${{ env.DEB_FILE_PATH }}" debs/ || { echo "Hata: .deb dosyası kopyalanamadı."; exit 1; }

          echo "Packages dosyası güncelleniyor..."
          # dpkg-scanpackages Theos'un kurulu olduğu ortamda olmalı
          # Bu komut için PATH'e theos/bin ekli olduğundan emin olun veya tam yolu verin
          dpkg-scanpackages -m debs /dev/null > Packages || { echo "Hata: Packages dosyası oluşturulamadı."; exit 1; }
          gzip -c Packages > Packages.gz || { echo "Hata: Packages.gz sıkıştırılamadı."; exit 1; }

          # Release dosyasını kendi bilgilerinizle düzenleyin!
          echo "Origin: SCInsta Tweak Deposu" > Release
          echo "Label: SCInsta" >> Release
          echo "Suite: stable" >> Release
          echo "Version: 1.0" >> Release # Depo sürümünüzü güncelleyebilirsiniz
          echo "Codename: ios" >> Release
          echo "Architectures: iphoneos-arm" >> Release
          echo "Components: main" >> Release
          echo "Description: Instagram deneyiminizi geliştiren SCInsta tweakleri." >> Release
          
          echo "MD5Sum:" >> Release
          md5sum Packages | awk '{print " " $1 " Packages"}' >> Release
          md5sum Packages.gz | awk '{print " " $1 " Packages.gz"}' >> Release

          echo "SHA1:" >> Release
          sha1sum Packages | awk '{print " " $1 " Packages"}' >> Release
          sha1sum Packages.gz | awk '{print " " $1 " Packages.gz"}' >> Release

          echo "SHA256:" >> Release
          sha256sum Packages | awk '{print " " $1 " Packages"}' >> Release
          sha256sum Packages.gz | awk '{print " " $1 " Packages"}' >> Release

      - name: Değişiklikleri Commit Et ve Push Et 📤
        working-directory: deb_repo
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Otomatik: Yeni SCInsta DEB paketi eklendi ve depo güncellendi" || echo "Değişiklik yok, commit atlanıyor."
          git push
        env:
          GH_TOKEN: ${{ secrets.DEB_REPO_TOKEN }} # Git push için bu token'ı kullan

      - name: Tamamlandı 🎉
        run: echo "DEB paketi başarıyla depoya yüklendi ve depo güncellendi."
